[project]
name = "poetry-lambda"
version = "0.1.0"
description = ""
authors = [
    {name = "Simon Brunning",email = "simon@brunningonline.net"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "asgiref (>=3.8.1,<4.0.0)",
    "boto3 (>=1.37.3,<2.0.0)",
    "botocore (>=1.37.3,<2.0.0)",
    "eval-type-backport (>=0.2.2,<0.3.0)",
    "flask[async] (>=3.1.0,<4.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "mangum (>=0.19.0,<0.20.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "wireup (>=0.16.0,<0.17.0)",
    "yarl (>=1.18.3,<2.0.0)",
]

[project.scripts]
web-app = 'poetry_lambda.app:main'

[tool.poetry]
packages = [{include = "poetry_lambda", from = "src"}]

[tool.poetry.group.dev.dependencies]
brunns-matchers = "^2.9.0"
factory-boy = "^3.3.3"
localstack = "^4.1.1"
pyhamcrest = "^2.1.0"
pyright = "^1.1.394"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-cov = "^6.0.0"
pytest-docker = "^3.2.0"
ruff = "^0.9.7"
stamina = "^24.3.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-plugin-lambda-build]
docker-image = "public.ecr.aws/sam/build-python3.13:latest-x86_64"
docker-network = "host"
docker-platform = "linux/x86_64"
package-artifact-path = "dist/poetry-lambda.zip"
without = "dev"

[tool.ruff]
line-length = 120
exclude = ["docs/", "scripts/"]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["COM812", "D", "PGH003"]

[tool.ruff.lint.per-file-ignores]
"src/poetry_lambda/repos/*" = ["ANN401"]
"tests/*" = ["ANN", "INP", "S101", "S106"]

[tool.pyright]
include = ["src/"]
pythonVersion = "3.13"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
